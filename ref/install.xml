<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<!-- %% -->
<!-- %W  install.msk               GAP documentation              Frank Celler -->
<!-- %W                                                     & Martin Schönert -->
<!-- %W                                                     & Alexander Hulpke -->
<!-- %W                                                    & Burkhard Höfling -->
<!-- %% -->
<!-- %H  @(#)<M>Id: install.msk,v 1.134 2006/03/10 09:20:48 gap Exp </M> -->
<!-- %% -->
<!-- %Y  Copyright 1997,  Lehrstuhl D für Mathematik,  RWTH Aachen,   Germany -->
<!-- %Y  (C) 1998 School Math and Comp. Sci., University of St  Andrews, Scotland -->
<!-- %Y  Copyright (C) 2002 The GAP Group -->
<!-- %% -->
<!-- %%  This file contains the  description of the installation procedure  -->
<!-- %%  for various operating systems. -->
<!-- %% -->

<!-- AK: This chapter was excluded from the manual 
     following the message below on September 13th, 2011 

Dear all,

We (Steve, John and me) agreed about a proposal to gather all GAP installation 
instructions in a single place.

Currently there are two versions of them:

1) linked from http://www.gap-system.org/Download/index.html
under the section "Unpacking and Installing the Archives", leading to installation
instructions under UNIX/Windows/Mac

2) included in the reference manual, chapter 77. 

This is prone to omissions/outdating/contradictions, since it's hard to maintain 
two copies of these instructions. 

The suggestion is to have a single text file called e.g. INSTALL (or INSTALL.txt)
available on Web (so search engines will see it) and linked from the Download 
section of the GAP website. We will be able to update it as soon as we need between
releases, and also get it using GAP distribution wrapping scripts and put into the 
GAP release in the top level gap4r5 directory. I personally think the canonical 
location for the INSTALL file would be the CVS repository of the GAP website, but 
there may be other options. Then, the Chapter 77 "Installing GAP" should be removed.

If there are no objections, we would like to proceed with removing Chapter 77 shortly
(on Wednesday?) in order to do this before GAP 4.5.2 will be out. Please let us know 
if you have any objections.

Thanks,
Alexander

-->


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Chapter Label="Installing GAP">
<Heading>Installing GAP</Heading>

<Index>installation</Index>
<Index Subkey="for installation">options</Index>
<P/>
&GAP; runs on a large number of different operating systems. It behaves
slightly different on each of those. This chapter describes the
behaviour of &GAP;, the installation, and the options on some of those
operating systems.
<P/>
Currently it contains instructions for <E>UNIX</E> (which includes the popular
variant <E>Linux</E>), for Apple Mac computers under <E>Mac OS X</E> (see 
<Ref Sect="GAP for Mac OS X"/>), and for <E>Windows</E>.
<P/>
For other systems the section <Ref Sect="Porting GAP"/> gives hints how to
approach such a port.


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Installation Overview">
<Heading>Installation Overview</Heading>

To permit compatibility over a wide range of operating systems, the
installation of &GAP; might differ from what you are accustomed to for your
particular operating system. In particular, there may be no <Q>Installer</Q>
program.
<P/>
Installing the &GAP; distribution alone takes about 150MB of disk space.
The packages add another 100MB. (These are upper limits. Unix is more
efficient in storing a large number of small files than Windows.)
You also should have at least 64MB of memory to run &GAP;.
<P/>
The installation consists of 5 easy steps:
<List>
<Item>
Get the archive(s) suitable for your system
</Item>
<Item>
Unpack
</Item>
<Item>
Compile (unless a binary has been provided already)
</Item>
<Item>
Test the installation
</Item>
<Item>
Install packages. (Some packages will only work under Unix and Mac OS X).
</Item>
</List>
<P/>
Installation will always install the full version of &GAP;. 
If you are worried about losing the old version, you can
keep an existing installation of &GAP; in another directory, it will not be
overwritten.
<P/>
Section&nbsp;<Ref Sect="The Documentation"/> contains information about the manual, where to
find and how to print it. Section&nbsp;<Ref Sect="If Things Go Wrong"/> lists common problems
with the installation.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Get the Archives">
<Heading>Get the Archives</Heading>

You can get archives for the &GAP; distribution from
<URL>http://www.gap-system.org</URL>.
As different operating systems use different archive formats, &GAP; is
available in a variety of archives. These archives slightly differ in the
treatment of text or binary files. If you get the wrong archive you might
get error messages during compilation or not be able to look at text files
in an editor.
<P/>
If you use
<List>
<Mark>Unix</Mark>
<Item>
you can use the <C>.tar.gz</C>, <C>.tar.bz2</C> or <C>.zip</C> archives.
</Item>
<Mark>Mac OS X</Mark>
<Item>
you can use the <C>.tar.gz</C>, <C>.tar.bz2</C> or <C>.zip</C> archives.
</Item>
<Mark>Windows</Mark>
<Item>
Use the <C>-win.zip</C> archive. 
</Item>
</List>
<P/>
Now get the installation archive 
<F>gap&VERSIONSUFFIX;-&lt;timestamp></F>
of the right kind, according to your operating system.
<!--
<Mark><F>packages&VERSIONSUFFIX;</F></Mark>
<Item>
which contains &GAP; packages that provide further functionality
</Item>
-->
<!--
<Mark><C>unzoo</C></Mark>
<Item>
Only if you use the <C>.zoo</C> archives: Unix and Mac OS X users get 
the source code <C>unzoo.c</C>, Windows users the <C>.exe</C> binary.
</Item>
-->
<!--
<Mark><F>xtom&VERSIONSUFFIX;</F></Mark>
<Item>
Contains about 80MB of further tables of marks. (You can always install this
later if the need arises.)
</Item>
-->
<P/>
Note that starting with release 4.4, the distribution archives for &GAP;
will always contain the most recent bugfix. Thus if you install anew from
scratch, you will not need to get any bugfixes.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Unpacking">
<Heading>Unpacking</Heading>

The concrete act of unpacking will vary slightly, depending on the operating
system and the type of archive used.
<P/>
<List>
<Mark>Unix, Mac OS X</Mark>
<Item>
Under Unix or Mac OS X unpack the archive <C>gap&VERSIONSUFFIX;</C> in whatever
place you want &GAP; to reside. 
<!--
If you use the <C>.zoo</C> archive, you will
have to compile the <C>unzoo</C> program first
<P/>
<Listing>
cc -o unzoo -DSYS_IS_UNIX -O unzoo.c
./unzoo -x gap&VERSIONSUFFIX;.zoo
</Listing>
-->
<P/>
(If you unpack the archive as <C>root</C> user under UNIX, make sure that you
issue the command <C>umask 022</C> before, to ensure that users will have
permissions to read the files.)
</Item>
<Mark>Windows</Mark>
<Item>
The archive must be extracted to the <E>main</E> directory of the <C>C:</C> drive. (If
you do not have permissions or sufficient free space to create directories
there, see section&nbsp;<Ref Sect="Expert Windows Installation"/>.)
<!--
If you use the <C>.zoo</C> archives we provide
move <F>unzoo.exe</F> and <F>gap&VERSIONSUFFIX;.zoo</F> in the
<F>C:</F> directory, open the <C>MS-DOS</C> (or <C>Command Prompt</C>) window. (You can
find this under <Q>Start/Programs/Accessories</Q>.)
In this window issue the commands
<P/>
<Listing>
cd c:\
unzoo -x gap&VERSIONSUFFIX;.zoo
</Listing>
<P/>
(It might be necessary to use upper case letters instead)
-->
<P/>
To use the <C>-win.zip</C> archive you will need a <C>ZIP</C> extractor.
Make sure that you specify extraction to the <F>c:/</F> folder
(with <E>no</E> extra directory name &ndash;the directory is part of the
archive)
to avoid extraction in a wrong place or in a separate directory.
After extraction you can start &GAP; with the file
<P/>
<Listing>
C:\&UCGAPDIRNAME;\bin\gapw95.exe
</Listing>
</Item>
</List>

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Compilation">
<Heading>Compilation</Heading>

For the Windows version the unpacking process will already have
put binaries in place. Under Unix and Mac OS X you will have to 
compile such a binary yourself. (Mac OS X users please see section 
<Ref Sect="GAP for Mac OS X"/> for information about compilation)
<P/>
Go into the directory <F>&GAPDIRNAME;</F> (which you just created by unpacking).
To get started quickly you may simply build &GAP; with default settings by issuing the two 
commands
<Listing><![CDATA[
./configure
make
]]></Listing>
Both will produce a lot of text output. You should end up with a shell
script <F>bin/gap.sh</F>(*) which you can use to start &GAP;. If you want, you can
copy this script later to a directory that is listed in your search path.
<P/>
(* In fact, what is produced is a script called <F>bin/gapXX.sh</F>, where <C>XX</C> is either 32 or 64, depending on the build mode in use, and <F>bin/gap.sh</F> is a link to the script just built. See the paragraph about build modes below for further details.)
<P/>
Mac OS X users please note that this script must be started from within the
<C>Terminal</C> Application. It is not possible to start &GAP; by clicking this
script.
<P/>
If you get weird error messages from these commands, make sure that
you got the Unix version of &GAP; (i.e. not the <C>-win.zip</C> format archive) and
that you extracted the archive on the machine on which you compile.
Also see section&nbsp;<Ref Sect="Known Problems of the Configure Process"/> below for further
information.
<P/>
There are several options to the build process which you can specify at the <C>configure</C>
step. The following paragraphs describe these options; a brief description of each is also available via
<Listing><![CDATA[
./configure --help
]]></Listing>
<P/>

<List>
<Mark>Configure options</Mark>
<Item></Item>
<Mark>GMP</Mark>
<Item>
By default, &GAP; 4.5 uses the external library <Package>GMP</Package> 
(see <URL>http://www.gmplib.org</URL>) for large integer arithmetic, replacing
the built-in code used in previous versions and achieving a significant speed-up in related 
computations. There is a version of <Package>GMP</Package> included with 
the &GAP; archive you downloaded and this will be used unless otherwise requested. You can 
configure <Package>GMP</Package> use as follows:
<Listing><![CDATA[
./configure --with-gmp=yes|no|system|"path"
]]></Listing>
If the argument you supply is <C>yes</C>, then the version of <Package>GMP</Package> bundled with
this &GAP; will be used. This is the default. If the argument is <C>system</C> you are
telling &GAP; that the <Package>GMP</Package> library is reachable with the standard search path, under
<F>/usr</F> or <F>/usr/local</F>.
You may instead give the complete <F>path</F> to a directory which contains the library.
If the argument is no, original &GAP; large integer functionality will be used instead of
<Package>GMP</Package>.
<P/>
Note that <C>--with-gmp</C> is equivalent to <C>--with-gmp=yes</C> and <C>--without-gmp</C>
is equivalent to <C>--with-gmp=no</C>.
</Item>

<Mark>Readline</Mark>
<Item>
&GAP; now also uses the external library <C>Readline</C> 
(see <URL>http://www.gnu.org/software/readline</URL>) which is used for command-line editing
support. &GAP; will use this library by default if it is available on your system. 
You can configure <C>Readline</C> use as follows:
<Listing><![CDATA[
./configure --with-readline=yes|no|"path"
]]></Listing>
If the argument you supply is <C>yes</C>, then &GAP; will look in standard locations for a 
<C>Readline</C> installed on your system. Or you can specify a <F>path</F> to a <C>Readline</C>
installation. If the supplied argument is <C>no</C> then readline support will not
be used.
<P/>
Note that <C>--with-readline</C> is equivalent to <C>--with-readline=yes</C> and 
<C>--without-readline</C> is equivalent to <C>--with-readline=no</C>.
</Item>

<Mark>Build mode</Mark>
<Item>
&GAP; will attempt to build in 32-bit mode on 32-bit machines and in 64-bit mode on 64-bit
machines. On a 64-bit machine, you can tell &GAP; to build in 32-bit instead, if you wish.
In that case, <Package>GMP</Package> will also be built in 32-bit mode. You can configure the build mode
as follows:
<Listing><![CDATA[
./configure --with-abi=32|64
]]></Listing>
The value of the argument determines the build mode &GAP; will attempt to use. Note that 
building in 64-bit mode on a 32-bit architecture is not supported.
<P/>
It is possible (on a 64-bit machine) to have builds in both 32- and 64-bit modes 'side by 
side'. To do this you
could unpack your &GAP; archive and then do:
<Listing><![CDATA[
./configure --with-abi=64
make
./configure --with-abi=32
make
]]></Listing>
This will create both scripts <F>bin/gap32.sh</F> and <F>bin/gap64.sh</F> and these can be 
called directly to choose the version you want. The link <F>bin/gap.sh</F> will point to the
most recent of these.
</Item>
</List>

The <C>configure</C> step creates the <F>Makefile</F>, needed for the <C>make</C> command.
You should not need to provide any arguments to <C>make</C> in order to build &GAP;. 
<P/> 

<!--
If you use Mac OS X in the <Q>Panther</Q> release (version 10.3), you might want to
change the call to <C>make</C> to 
<Listing><![CDATA[
make COPTS="-fast -mcpu=7450"
]]></Listing>
on a G4 system or to
<Listing><![CDATA[
make COPTS="-O3 -mtune=G5 -mcpu=G5 -mpowerpc64"
]]></Listing>
on a G5 system (please note that the <C>-fast</C> compiler option causes problems
on a G5 at the time of this writing &ndash;February 2004). Initial tests
indicate that this will give you substantially improved performance.
<P/>
Unless you want to use the same installation of &GAP; also under Windows,
issue the command
<Listing><![CDATA[
make removewin
]]></Listing>
to delete unnecessary files that are Windows-only and only take up about 2MB
of space.
-->

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Test of the installation">
<Heading>Test of the installation</Heading>

You are now at a point where you can start &GAP; for the first time. Unix
and Mac OS X users type 
<Listing><![CDATA[
./bin/gap.sh
]]></Listing>
Windows users start
<Listing>
C:\&UCGAPDIRNAME;\bin\gapw95.exe
</Listing>
&GAP; should start up with its banner and after a little while give you a
command prompt <C>></C>.
<P/>
Try a few commands to see if the compilation succeeded.
<P/>
<Example><![CDATA[
gap> 2 * 3 + 4;
10
gap> Factorial( 30 );
265252859812191058636308480000000
gap> m11 := Group((1,2,3,4,5,6,7,8,9,10,11),(3,7,11,8)(4,10,5,6));;
gap> Size( m11 );
7920
gap> Length( ConjugacyClasses( m11 ) );
10 
gap> Factors( 10^42 + 1 );
[ 29, 101, 281, 9901, 226549, 121499449, 4458192223320340849 ]
]]></Example>
<P/>
If you get the error message <Q><C>hmm, I cannot find lib/init.g</C></Q> you are
likely to have installed only the binary (or on Windows have not installed
&GAP; in the root directory of the <F>C:</F> drive).
<P/>
If &GAP; starts but you get error messages for the commands you issued, the
files in the <F>lib</F> directory are likely to be corrupt or incomplete. Make
sure that you used the proper archive and that extraction proceeded without
errors.
<P/>
Especially try the command line editing and history facilities, because
they are probably the most machine dependent feature of &GAP;. Enter a
few commands and then make sure that <B>Ctrl-P</B> redisplays the last
command, that <B>Ctrl-E</B> moves the cursor to the end of the line, that
<B>Ctrl-B</B> moves the cursor back one character, and that <B>Ctrl-D</B>
deletes single characters. So, after entering the above commands, typing
<P/>
<B>Ctrl-P</B> <B>Ctrl-E</B> <B>Ctrl-B</B> <B>Ctrl-B</B> <B>Ctrl-B</B>
<B>Ctrl-B</B> <B>Ctrl-D</B> <C>2</C> <B>Return</B>
<P/>
should give the following lines:
<P/>
<Example><![CDATA[
gap> Factors( 10^42 + 2 );
[ 2, 3, 433, 953, 128400049, 3145594690908701990242740067 ]
]]></Example>
<P/>
<#Include Label="[1]{testinstall.g}">
<P/>
<Log><![CDATA[
test file         GAP4stones     time(msec)
-------------------------------------------
testing: /home/fac/a/hulpke/gap4/tst/zlattice.tst
zlattice.tst               0              0
testing: /home/fac/a/hulpke/gap4/tst/gaussian.tst
gaussian.tst               0             10
[ further lines deleted ]
]]></Log>
<P/>
<#Include Label="[1]{testall.g}">
<P/>
Windows users should note that the MS-DOS/Command Prompt user interface
provided by Microsoft might not offer history scrolling or cut and paste
with the mouse. See section&nbsp;<Ref Sect="Expert Windows Installation"/> for a way around
this.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Packages">
<Heading>Packages</Heading>

&GAP; distribution already contains all currently redistributed with 
&GAP; packages in the <F>&GAPDIRNAME;/pkg</F> directory, and 
for packages that consist only of &GAP; code no further installation is
necessary. 
<P/>
Some packages however contain external binaries that will
require separate compilation. (If you use Windows you
will not be able to use external binaries anyhow any you can skip the rest
of this section.) You can skip this compilation now and do it later
&ndash;&GAP; will work fine,
just the capabilities of the affected packages won't be available.
<P/>
In general, each package contains a <F>README</F> file that contains information
about the package and the necessary installation. Typically the installation
for a package consists of changing in the packages directory and issuing the
commands <C>./configure; make</C> in the packages directory. (This has to be done
separately for exery package).
<P/>
If you have problems with package installations please contact the package
authors as listed in the packages <F>README</F> file.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Finish Installation and Cleanup">
<Heading>Finish Installation and Cleanup</Heading>

Congratulations, your installation is finished. 
<P/>
Once the installation is complete,
we would like to ask you to send us a short note
to <Email>support@gap-system.org</Email>, telling us about the 
installation. (This is just a courtesy; we like to know how many people
are using &GAP; and get feedback regarding difficulties (hopefully none)
that users may have had with installation.)
<P/>
We also suggest that you subscribe to our <C>GAP Forum</C> mailing  list;  see
the &GAP; web pages for details. Whenever there is  a  bug  fix  or  new
release of &GAP; this is where it is  announced.  The  <C>GAP Forum</C>  also
deals with user questions of a general  nature;  bug  reports  and  other
problems you have while installing and/or using &GAP; should be sent  to
<Email>support@gap-system.org</Email>.
<P/>
The directories <F>trans</F>, <F>small</F> and <F>prim</F> within <F>&GAPDIRNAME;</F>
contain data libraries. If you are short of disk space you can erase some of
them. Similarly, you can erase and any of the &GAP; package directories in
<C>pkg</C> that you have decided you don't need, but then of course you will not
be able to access these data or packages. (You should do this only if you
have diskspace problems as you might find out later that you need certain
packages.)
<P/>
If you are new to &GAP;, you might want to read through the following two
sections for information about the documentation.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="The Documentation">
<Heading>The Documentation</Heading>

The &GAP; documentation is distributed in various <Q>books</Q>.
The standard distribution contains two of them.
&GAP; packages (see Chapter&nbsp;<Ref Chap="GAP Packages"/> and,
in particular, Section&nbsp;<Ref Sect="Loading a GAP Package"/>) provide
their own documentation in their own <F>doc</F> directories.
<P/>
All documentation will be available automatically within every $GAP; session
(see Section&nbsp;<Ref Sect="Help" BookName="tut"/> and
Chapter&nbsp;<Ref Chap="The Help System"/> in this manual for more details).
<P/>
There also is (if installed) an HTML version of some books that can be
viewed with an HTML browser, see&nbsp;<Ref Sect="Changing the Help Viewer"/>.
Some of these use <E>unicode characters</E> for mathematical formulae.
(<C>Firefox</C>, <C>Konqueror</C> and <C>Safari</C> all support unicode
characters.)
<P/>
The manual is also available in <C>pdf</C> format.
In the full distribution 
these files are included in the directory <F>&GAPDIRNAME;/doc</F>
in the subdirectories <F>tut</F> (a  beginner's  tutorial) and
<F>ref</F> (the  reference manual).
<P/>
If  you want  to  use these manual files  with  the  help system from
your $GAP; session you  may
check (or  make sure)  that  your  system  provides some  additional
software  like
<P/>
<List>
<Mark><C>xpdf</C></Mark>
<Item>
  see <URL>http://www.foolabs.com/xpdf/</URL>
</Item>
<!--  Can we consider this as outdated? (FL)
<Mark><C>xdvi</C></Mark>
<Item>
  see any of the CTAN  sites/mirrors; the main site is
  <URL>http://www.ctan.org/</URL>
  and the mirrors are listed at
  <URL>http://www.ctan.org/tex-archive/CTAN.sites</URL>
  <P/>
  At any of the mirrors the path of the file containing the <C>xdvi</C> archive
  (after the main site name) is
  <C>tex-archive/dviware/xdvi/xdvi.tar.gz</C>.
</Item>
-->
<Mark><C>acroread</C></Mark>
<Item>
  see <URL>http://www.adobe.com/products/acrobat/readstep.html</URL>
</Item>
</List>
<P/>
To complete beginners, we  suggest  you read (parts of) the tutorial  first 
for  an introduction to &GAP; 4. Then start to use the system with extensive 
use of the  help  system
(see Section&nbsp;<Ref Sect="Help" BookName="tut"/> and
Chapter&nbsp;<Ref Chap="The Help System"/> in this manual).
<P/>
As some  of the manuals  are quite large,  you should not  immediately print
them. If  you start using  &GAP; it can be  helpful to print  the tutorial
(and  probably the  first chapters  of the  reference manual).  There is  no
compelling reason to print the whole of the reference manual, better use the
help system which provides useful search features.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="If Things Go Wrong">
<Heading>If Things Go Wrong</Heading>

<Index>problems</Index>
<Index>FAQ</Index>
<P/>
This section lists a few common problems when installing or running &GAP;
and their remedies. Also see the FAQ list on the &GAP; web pages at
<URL>http://www.gap-system.org/Faq/faq.html</URL>
<P/>
<List>
<Mark>&GAP; starts with a warning <Q><C>hmm, I cannot find `lib/init.g'</C></Q>.</Mark>
<Item>
You either started only the binary or did not edit the shell script/batch
file to give the correct library path. 
You must start the binary with the command line option
<C>-l</C>&nbsp;<A>path</A>
where <A>path</A> is the path to the &GAP; home directory.
See section&nbsp;<Ref Sect="Command Line Options"/>.
</Item>
<Mark>When starting, &GAP; produces error messages about undefined variables.</Mark>
<Item>
You might have a <F>.gaprc</F> file in your home directory
that was intended for &GAP;&nbsp;3 but is not compatible with &GAP;&nbsp;4.
See section&nbsp;<Ref Sect="sect:gap.ini"/>
in chapter&nbsp;<Ref Chap="Running GAP"/>.
</Item>
<Mark>&GAP; stops with an error message <Q><C>exceeded the permitted memory</C></Q>.</Mark>
<Item>
Your job got bigger than what is permitted by default (this is a
safety feature to avoid single jobs wrecking a multi-user system.) You can
type <C>return;</C> to continue, if the error message happens repeatedly you
better start the job anew and use the command line option <C>-o</C> to set a
higher memory limit.
</Item>
<Mark>&GAP; stops with an error message: <Q><C>cannot extend the workspace any more</C></Q>.</Mark>
<Item>
Your calculation exceeded the available memory. Most likely you asked &GAP;
to do something which required more memory than you have (as listing all
elements of <M>S_{15}</M> for example). You can use the command line option <C>-g</C>
(see section&nbsp;<Ref Sect="Command Line Options"/>) to display how
much memory &GAP; uses. If this is below what your machine has available
extending the workspace is impossible.
Start &GAP; with more memory or use the <C>-a</C> option to 
pre-allocate initially a large piece of workspace.
</Item>
<Mark>&GAP; is not able to allocate memory above a certain limit</Mark>
<Item>
In a 32-bit mode &GAP; is unable to use over 4GB of
memory. Since the address space also has to keep the operating system,
3GB probably are an upper limit for a &GAP; workspace.
<P/>
Depending on the operating system, it also might be necessary to compile the
&GAP; binary statically (i.e. to include all system libraries) to avoid
collisions with system libraries located by default at an address within the
workspace. (Under Linux for example, 1GB is a typical limit.)
You can compile a static binary using <C>make static</C>.
<P/>
Windows users also see below for a built-in limit.
</Item>
<Mark><C>make</C> complains about not being able to find files in <C>cnf</C> or <C>src</C> which exist.</Mark>
<Item>
The dates of the new files were not extracted properly (Alpha-OSF machines
are prone to this). Call
<P/>
<Listing><![CDATA[
touch * cnf/* src/*
]]></Listing>
<P/>
from the main &GAP; directory (this ought to reset the date of all relevant
files to <Q>now</Q>) and try again.
</Item>
<Mark>Recompilation does not actually compile changed files.</Mark>
<Item>
The dates of the new files were not extracted properly. Go in the source
directory and <C>touch</C> (UNIX command to change date) the new files.
</Item>
<Mark>Recompilation fails or the new binary crashes.</Mark>
<Item>
Call <C>make clean</C> and restart the <C>configure</C> / <C>make</C> process completely
from scratch. (It is possible that the operating system and/or compiler got
upgraded in the meantime and so the existing <C>.o</C> files cannot be used any
longer.
</Item>
<Mark>A calculation runs into an error <Q>no method found</Q>.</Mark>
<Item>
&GAP; is not able to execute a certain operation with the given arguments.
Besides the possibility of bugs in the library this means two things: Either
&GAP; truly is incapable of coping with this task (the objects might be
too complicated for the existing algorithms or there might be no algorithm
that can cope with the input). Another possibility is that &GAP; does not
<E>know</E> that the objects have certain nice properties (like being finite)
which are required for the available algorithms. See
sections&nbsp;<Ref Sect="ApplicableMethod"/> and <Ref Func="KnownPropertiesOfObject"/>.
</Item>
</List>
<P/>
<E>Problems specific to Windows</E>
<List>
<Mark>Command line editing does not work under Windows.</Mark>
<Item>
The default key commands are UNIX-like. &GAP; also tries to emulate some of
the special keys under Windows, however if the key repeat is set too high,
Windows loses parts of the codes for these keys and thus &GAP; cannot
recognize them.
Windows98 produces the same scan code for all cursor keys. As &GAP; does
not interface directly with the Windows machinery, there is no known way around
this problem. Use the Unix-style cursor commands.
</Item>
<Mark>The <C>^</C>-key or <C>"</C>-key cannot be entered.</Mark>
<Item>
This is a problem if you are running a keyboard driver for some non-english
languages. These drivers catch the <C>^</C> character to produce the French
circumflex accent and do not pass it properly to &GAP;.
No fix is known.  (One can type <C>POW(a,b)</C> for <C>a^b</C>.) 
</Item>
<Mark>&GAP; does not start or cannot expand memory</Mark>
<Item>
You will have to edit a registry entry to be able to use more than 127MB of
memory. See&nbsp;<Ref Sect="Expert Windows Installation"/>.
</Item>
<Mark>Cut and Paste does not work</Mark>
<Item>
You might want to start &GAP; under <C>rxvt</C>
&ndash;see&nbsp;<Ref Sect="Expert Windows Installation"/>.
Also <URL>http://www.gap-system.org/Faq/Hardware-OS/hardware-os.html</URL> might give
a remedy.
</Item>
<Mark>You get an error message about the <C>cygwin1.dll</C></Mark>
<Item>
&GAP; comes with a version of this dynamic library. If you have another
version installed (use <Q>Find</Q>), delete the older one (and probably copy the newer one in
both places).
</Item>
</List>
<P/>
<Index Key="support" Subkey="email address"><C>support</C></Index>
<Index Subkey="see If Things Go Wrong">bug reports</Index>
<E>If all these remedies fail</E> or you encountered a bug please send a mail to
<Email>support@gap-system.org</Email>. Please give:
<P/>
<List>
<Item>
 a (short, if possible) self-contained excerpt of a &GAP;
session containing both input and output that illustrates your problem 
(including comments of why you think it is a bug); and
</Item>
<Item>
 state the type of machine, operating system,
(compiler used, if UNIX/Linux) and version of &GAP; (for example
<Q>gap&VERSIONSUFFIX;, fix1</Q>) you are using
(the line after the &GAP;&nbsp;4 banner starting:
<P/>
<Log><![CDATA[
GAP4, Version: 4...
]]></Log>
<P/>
when your &GAP;&nbsp;4 starts up, supplies the information required).
</Item>
</List>

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Known Problems of the Configure Process">
<Heading>Known Problems of the Configure Process</Heading>

If <C>make</C> complains <Q>Do not know how to make <A>xyz</A></Q> but <A>xyz</A> is an
existing file, it is likely that the dates of the files were not
extracted properly (Alpha-OSF machines are prone to this). Call
<Listing><![CDATA[
touch * cnf/* src/*
]]></Listing>
from the main &GAP; directory (this ought to reset the date of all relevant
files to <Q>now</Q>) and try again.
<P/>
Sometimes the <C>configure</C> process does not properly figure out the 
<Q>inline</Q> compiler command. If you get error messages
that complain that <Q>inline</Q> is unknown, edit the file <C>config.h</C> in the
<C>bin/<A>architecture</A></C> subdirectory and replace the line
<Listing><![CDATA[
/* #undef inline */
]]></Listing>
by
<Listing><![CDATA[
#define inline
]]></Listing>
and then try to compile again.
<P/>
The <C>configure</C> script respects compiler settings given in environment
variables. However such settings may conflict with the automatic
configuration process. If <C>configure</C> produces strange error messages about
not being able to run the compiler, check whether environment variables that
might affect the compilation (in particular <C>CC</C>, <C>LD</C>, <C>CFLAGS</C>, <C>LDFLAGS</C>
and <C>C_INCLUDE_PATH</C>) are set and reset them using <C>unsetenv</C>.
<P/>
Some users reported problems with <C>make</C>, while the GNU version <C>gmake</C>
worked. Thus if problems occur you should try <C>gmake</C> instead
if it is installed on your machine.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Problems on Particular Systems">
<Heading>Problems on Particular Systems</Heading>

The highest levels of optimization of the OSF/4 C compiler <C>cc</C> on the
Compaq alpha chip make assumptions about the use of pointers which are
not valid for &GAP;, and produce executables that can crash; <C>-O3</C>
seems to be safe, but <C>-O4</C> and <C>-fast</C> are not.
<P/>
On Sun and IRIX systems which are capable of running in 32 or 64 bit
modes, it is possible to build a 64 bit version of &GAP;, but special 
procedures are needed (and, on Suns, a compiler bug must be
circumvented). If you wish to compile on such a system, please send an
email to 
<Email>support@gap-system.org</Email>.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Optimization and Compiler Options">
<Heading>Optimization and Compiler Options</Heading>

Because of the large variety of different versions of UNIX and different
compilers it is possible that the <C>configure</C> process will not chose
best possible optimization level, but you might need to tell <C>make</C> about
it.
<P/>
If you want to compile &GAP; with further compiler options (for example
specific processor optimizations) you will have to assign them to the variable
<C>COPTS</C> as in the following example when calling <C>make</C>:
<Listing><![CDATA[
make COPTS=-option
]]></Listing>
If there are several compiler options or if they contain spaces you might
have to enclose them by quotes to avoid depending on the shell you are
using.
<P/>
The <C>configure</C> process also introduces some default compiler
options. (See the <C>Makefile</C> in the <C>bin/<A>architecture</A></C> directory for details.)
You can eliminate these by assigning the variable <C>CFLAGS</C> (which contains
the default options and <C>COPTS</C>) to the desired list of compiler options in
the same way as you would assign <C>COPTS</C>.
<P/>
The <E>recommended</E> C compiler for &GAP; is the GNU C compiler <C>gcc</C>,
or a related compiler such as <C>egcs</C>. There are two reasons for this
recommendation: firstly we use <C>gcc</C> in &GAP; development and so this
combination has been far more heavily tested than any other and
secondly, we have found that it generally produces code which is
faster than that produced by other compilers. 
<P/>
If you do wish to use another compiler, you should remove
<F>config.cache</F> and <F>config.status</F> in the &GAP; root directory, set
the environment variable <C>CC</C> to the name of your preferred compiler
and then rerun <C>configure</C> and <C>make</C>. You may have to experiment to
determine the best values for <C>CFLAGS</C> and/or <C>COPTS</C> as described
above. Please let us (<Email>support@gap-system.org</Email>) know 
the results of your experiments.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Porting GAP">
<Heading>Porting GAP</Heading>

Porting &GAP; to a new operating system should not be very difficult.
However, &GAP; expects some features from the operating system and the
compiler and porting &GAP; to a system or with a compiler that do not
have those features may prove very difficult.
<P/>
The design of &GAP; makes it quite portable. &GAP; consists of a small
kernel written in the programming language C and a large library written
in the programming language provided by the &GAP; kernel, which is also
called &GAP;.
<P/>
Once the kernel has been ported, the library poses no additional problem,
because all those functions only need the kernel to work, they need no
additional support from the environment.
<P/>
The kernel itself is separated into a large part that is largely
operating system and compiler independent, and one file that contains all
the operating system and compiler dependent functions. Usually only this
file must be modified to port &GAP; to a new operating system.
<P/>
Now let us take a look at the minimal support that &GAP; needs from the
operating system and the machine:
<P/>
You need enough main memory in your computer. The size of the
&GAP; kernel varies between 1.5 and 2.5 MByte (depending on the machine).
The &GAP; library additionally takes a minimum of 10MByte and the
library of functions that &GAP; loads takes up another 1.5 MByte. So it
is clear that at least 16 MByte of main memory are required to do any
serious work with &GAP;.
<P/>
Additionally, the &GAP; kernel needs a flat address space, that is all the
memory is available in one contiguous chunk.
<P/>
Note that this implies that there is no point in trying to port &GAP; to
plain MS-DOS running on IBM PCs and compatibles. The version of &GAP;
for IBM PC compatibles that we provide runs on machines with the
Intel 80486, Pentium or beyond processor under 32-bit Windows.
(This is also necessary, because, as just mentioned, &GAP; wants to view its 
memory as a large flat address space.)
<P/>
Next let us turn to the requirements for the C compiler and its library.
<P/>
As was already mentioned, the &GAP; kernel is written in the C language.
We have tried to use as few features of the C language as possible.
&GAP; has been compiled without problems with compilers that adhere to
the old definition from Kernighan and Ritchie, and with compilers that
adhere to the new definition from the ANSI-C standard.
<P/>
Porting &GAP; to another UNIX should not be hard. You need some
very basic understanding of C and UNIX.
If you plan to port &GAP; to a non-UNIX system please contact
<Email>support@gap-system.org</Email>.
<P/>
The configuration script runs various tests to determine the configuration
of your system. It produces a file <C>bin/<A>architecture</A>/config.h</C> which
contains definitions according to the test results.
It might be, however, that the tests used don't produce on
your machine the results they are expected to or that further tests are
necessary. If this is the case the easiest way is to edit the <C>config.h</C>
script, remove all object files and call <C>make</C> in the <C>bin/<A>architecture</A></C>
subdirectory. If you have to resort to changing or amending this file,
please tell us what had to be changed (mail to
<Email>support@gap-system.org</Email>). If you had to add further definitions
please also tell what properties of your system these <C>define</C>s represent.
<P/>
If &GAP; compiles but crashes while reading the library or during a garbage
collection with a bus error it is possible that the configuration script did
not guess the permitted pointer alignment correctly. This value is stored
in the line
<Listing><![CDATA[
#define C_STACK_ALIGN      2
]]></Listing>
of <C>config.h</C>. Increase the value to the next power of 2  (<M>\le  8</M>)  and
compile &GAP; anew.
<P/>
There is still a <C>Makefile</C> in the <C>src</C> directory, but it is not used by
the configuration process any longer. As a last resort you might want  to
try this file, but please still report your problems to <C>support</C>.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="GAP for Mac OS X">
<Heading>GAP for Mac OS X</Heading>

<Index>Mac OS X</Index>
<Index>Apple</Index>
<Index>Mac</Index>
<Index>Macintosh</Index>
Mac OS X is built on top of
a variant of Unix. Thus, you should follow the Unix installation instructions 
to compile &GAP;; then you will be able to use all features of GAP as well as 
all packages. However for installation you might need a basic knowledge of Unix.
Note also that the Unix version of &GAP; uses Unix style text files. (These
files differ from older style Macintosh text files in that lines do not
contain a trailing <C>CR</C> character. Depending on what text editor you use
you might not be able to inspect &GAP; library files and potentially might
run into problems with program files you create if they contain strings that
go over several lines.)
<P/>
The following are a couple of notes and remarks about this:
<P/>
First, note that you should get the Unix type &GAP; archives,
i.e. one of <C>.zip</C>, <C>.tar.gz</C> or <C>.tar.bz2</C>archives, 
but <E>not</E> the <C>-win.zip</C> archive (you won't be able 
to compile the program as given in the <C>-win.zip</C> archive).
<P/>
<!--
(If you prefer to use the <C>.zoo</C> type archive over <C>.tar</C> you can 
use this as well.  However then you will need to use the Unix 
version of <C>unzoo</C>, which you will need to compile first by the command
<Listing><![CDATA[
gcc -o unzoo -DSYS_IS_UNIX -O unzoo.c
]]></Listing>
If you use the Macintosh version of the <C>unzoo</C> extractor, the text files
will be converted to Mac OS format and you will have problems with the
compilation.)
<P/>
Go (using the <C>cd</C> command in the terminal window) into the directory where
you want to install &GAP;, and copy the archives (and the unzoo program if
you want to use <C>zoo</C>) in this directory. Then extract the archive by
the command
<Listing>
tar zxvf gap&VERSIONSUFFIX;.tar.gz
</Listing>
(respectively &ndash;if you prefer <C>zoo</C>&ndash;
<Listing>
gcc -o unzoo -DSYS_IS_UNIX -O unzoo.c
./unzoo -x gap&VERSIONSUFFIX;.zoo
</Listing>
)
<P/>
-->

Next, you will need a compiler and build tools like <C>make</C>. The <C>gcc</C> C 
compiler is not installed on a Mac OS X system by default,
but is part of the <Q>XCode</Q> app(lication). This package might be in an
installer package already on your system (look at the <C>Installer</C> folder
under <C>Applications</C>), if not you can get it from Apple by
registering as a developer (see <URL>http://developer.apple.com</URL>), or by purchasing 
it from the App Store.
<P/>
To compile and run &GAP; you will have to open the <C>Terminal</C> application
and type the Unix command into its window. The <C>Terminal</C> application can 
be found in the <C>Utilities</C> folder in the <C>Applications</C> folder
(&GAP; will run in such a window). 
Now simply follow the Unix installation instructions to compile &GAP;. 

</Section>



<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Expert Windows Installation">
<Heading>Expert Windows Installation</Heading>

This section decribes how to get a better shell for &GAP; and how to
install &GAP; in another directory. These tasks are slightly complicated
due to problems in the design of Windows, if you have not edited a batch
file before you might want to contact your system administrator for help.
<P/>
Some users report that the <C>rxvt</C> shell (see <URL>http://www.rxvt.org</URL>)
gives a better windows environment for cut/paste etc. 
<P/>
You can find a copy of this program in the <C>bin</C> subdirectory of the &GAP;
installation. <E>Please note that this program is not part of the &GAP;
distribution and that we cannot offer any support for it</E>.  You can start
&GAP; under this program via the <C>gaprxvt.bat</C> script in the <C>bin</C>
subdirectory. 
<P/>
(The program has been tested only under a particular version of Windows98.
It might not work under other releases. It also might be necessary to adapt
paths in the batch file.) Under <C>rxvt</C> the standard Unix XWindows
cut-and-paste operations (left mouse button cuts, middle mouse button
pastes) work. After you terminate &GAP; a text window might stay on which
you can safely delete.
<P/>
If you decide to install &GAP; in another directory than <C>C:</C> you can do so,
but you will have to edit a batch file and use this file to start &GAP;.
<P/>
First unpack the &GAP; distribution in the directory you want. 
<P/>
Lets suppose you want &GAP; to reside in the directory
<Listing><![CDATA[
C:\MY PROGRAMS\GAP
]]></Listing>
Extract &GAP; (as described in the previous section for <C>C:</C>) in this
directory. (alternatively, you can also first unpack it in 
<Listing>
C:\&UCGAPDIRNAME;
</Listing>
test it there first, and afterwards move it in the desired location.)
<P/>
You now will have to edit the provided batch file, that will be used to start &GAP;.
This batch file is needed, since &GAP; otherwise will not find its library
directories. The file sits in the <C>bin</C> directory of the &GAP;
distribution, i.e. in our case it is
<Listing>
C:\MY PROGRAMS\GAP\&UCGAPDIRNAME;\bin\gap.bat
</Listing>
This file should contain the following <E>single</E> line (which might be broken
over in several lines in this manual as the page width is limited):
<Listing>
"C:\MY PROGRAMS\GAP\&UCGAPDIRNAME;\bin\gapw95.exe" -m 14m 
  -l "C:\MY PROGRAMS\GAP\&UCGAPDIRNAME;" %1 %2 %3 %4 %5 %6 %7 %8
</Listing>
<P/>
You now should be able to start &GAP; by clicking this <F>gap.bat</F> file.
<P/>
If you also want to use <C>rxvt</C> you have to edit the <F>gaprxvt.bat</F> file to
take care of the changed path in two places for the &GAP; binary as well as
for the &GAP; library.
<P/>
By default, the <Q>cygwin</Q> environment we use limits a programs workspace to
128MB of memory. To increase this limit, it is necessary to edit the
Windows registry.
<P/>
<E>WARNING:</E> Editing the registry is the Windows equivalent of open heart
surgery. Do not attempt this change if you have no previous experience in
doing this. The web page
<URL>http://www.cygwin.com/cygwin-ug-net/setup-maxmem.html</URL> gives further
details.
<P/>
Before changing the entries, you might have to run &GAP; once first to
create the appropriate registry keys.
<P/>
The shell script <F>usemem.bat</F> in the <F>bin</F> directory sets a registry entry
<Listing><![CDATA[
/HKEY_LOCAL_MACHINE/Software/Cygnus Solutions/Cygwin/heap_chunk_in_mb
]]></Listing>
to decimal 1024. 
<P/>
If you prefer to do the change by hand, open <C>regedit</C> and
go to the <C>Cygwin</C> Key listed above. Then choose <C>new value</C> and add
<C>heap_chunk_in_mb</C>. <C>Modify</C> it to contain decimal 1024.

</Section>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Section Label="Copyrights">
<Heading>Copyrights</Heading>

In addition to the general copyright for &GAP; set forth in the Copyright
the following terms apply to the versions of &GAP; for Windows.
<P/>
The executable of &GAP; for Windows that we distribute was compiled with
the <C>gnuwin32</C> compiler of the <C>cygwin</C> package. 
This compiler can be obtained by anonymous <C>ftp</C> from a
variety of general public FTP archives. Many thanks to the Free Software
Foundation and RedHat Software for this amazing piece of work.
<P/>
The GNU C compiler is
<P/>
<E>Copyright (C) 2002 Free Software Foundation, Inc.
675 Mass Ave, Cambridge, MA 02139, USA</E>
<P/>
under the terms of the GNU General Public License (GPL).
<P/>
The Cygwin32 API library is also covered by the GNU GPL. The executable we
provide is linked against this library (and in the process includes
GPL'd Cygwin32 glue code). This means that the executable falls under
the GPL too, which it does anyhow.
<P/>
The <F>cygwin1.dll</F>, <F>libW11.dll</F>, <F>rxvt.exe</F> and <F>regtool.exe</F> binaries are
taken unmodified from the Cygwin distribution. They are copyright by RedHat Software
and released under the GPL. You can find more information about <C>cygwin</C> under
<URL>http://www.cygwin.com</URL>. You also will be able to obtain the sources for <C>cygwin</C> from this place.
<P/>
Please contact <Email>support@gap-system.org</Email> if you need further information.

</Section>
</Chapter>


